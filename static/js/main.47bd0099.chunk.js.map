{"version":3,"sources":["components/Navbar/Navbar.tsx","App.tsx","utils/searchHelper.ts","components/SearchLink.tsx","types/FilterSex.ts","components/PeopleFilters.tsx","components/Loader/Loader.tsx","components/PersonLink/PersonLink.tsx","types/SortField.ts","components/PeopleTable.tsx","api.ts","components/PeoplePage.tsx","components/HomePage/Homepage.tsx","components/NotFoundPage/NotFoundPage.tsx","index.tsx"],"names":["getClass","isActive","cn","Navbar","className","role","to","App","getSearchWith","currentParams","paramsToUpdate","newParams","URLSearchParams","toString","Object","entries","forEach","key","value","delete","Array","isArray","part","append","set","SearchLink","children","params","props","useSearchParams","searchParams","search","FilterSex","PeopleFilters","setSearchParams","query","centuries","getAll","sexOptions","keys","map","sex","get","All","type","placeholder","onChange","event","newQuery","target","century","includes","filter","length","Loader","PersonLink","person","slug","name","SortField","PeopleTable","people","allPeople","useParams","sortField","personExist","parentName","find","p","setSort","setOrder","field","sort","order","born","died","motherName","fatherName","API_URL","wait","delay","Promise","resolve","setTimeout","getPeople","then","fetch","response","json","PeoplePage","useState","peopleFromServer","setPeopleFromServer","isLoading","setIsLoading","error","setError","loadData","useEffect","filteredPeople","React","useMemo","preparedQuery","toLowerCase","trim","visiblepeople","birthCentury","Math","ceil","a","b","Name","localeCompare","Sex","Born","Died","reverse","HomePage","NotFoundPage","createRoot","document","getElementById","render","path","element","index","replace"],"mappings":"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","file":"static/js/main.47bd0099.chunk.js","sourcesContent":["import { NavLink } from 'react-router-dom';\nimport cn from 'classnames';\n\nconst getClass = ({ isActive }: { isActive: boolean }) => {\n  return cn('navbar-item', { 'has-background-grey-lighter': isActive });\n};\n\nexport const Navbar = () => {\n  return (\n    <nav\n      data-cy=\"nav\"\n      className=\"navbar is-fixed-top has-shadow\"\n      role=\"navigation\"\n      aria-label=\"main navigation\"\n    >\n      <div className=\"container\">\n        <div className=\"navbar-brand\">\n          <NavLink\n            className={getClass}\n            to=\"/\"\n          >\n            Home\n          </NavLink>\n\n          <NavLink\n            className={getClass}\n            to=\"/people\"\n          >\n            People\n          </NavLink>\n        </div>\n      </div>\n    </nav>\n  );\n};\n","import { Outlet } from 'react-router-dom';\n\nimport './App.scss';\nimport { Navbar } from './components/Navbar';\n\nexport const App = () => (\n  <div data-cy=\"app\">\n    <Navbar />\n\n    <main className=\"section\">\n      <div className=\"container\">\n        <Outlet />\n      </div>\n    </main>\n  </div>\n);\n","export type SearchParams = {\n  [key: string]: string | string[] | null,\n};\n\n/**\n * This function prepares a correct search string\n * from a given currentParams and paramsToUpdate.\n */\nexport function getSearchWith(\n  currentParams: URLSearchParams,\n  paramsToUpdate: SearchParams, // it's our custom type\n): string {\n  // copy currentParams by creating new object from a string\n  const newParams = new URLSearchParams(\n    currentParams.toString(),\n  );\n\n  // Here is the example of paramsToUpdate\n  // {\n  //   sex: 'm',                ['sex', 'm']\n  //   order: null,             ['order', null]\n  //   centuries: ['16', '19'], ['centuries', ['16', '19']]\n  // }\n  //\n  // - params with the `null` value are deleted;\n  // - string value is set to given param key;\n  // - array of strings adds several params with the same key;\n\n  Object.entries(paramsToUpdate)\n    .forEach(([key, value]) => {\n      if (value === null) {\n        newParams.delete(key);\n      } else if (Array.isArray(value)) {\n        // we delete the key to remove old values\n        newParams.delete(key);\n\n        value.forEach(part => {\n          newParams.append(key, part);\n        });\n      } else {\n        newParams.set(key, value);\n      }\n    });\n\n  // we return a string to use it inside links\n  return newParams.toString();\n}\n","import { Link, LinkProps, useSearchParams } from 'react-router-dom';\nimport { getSearchWith, SearchParams } from '../utils/searchHelper';\n\n/**\n * To replace the the standard `Link` we take all it props except for `to`\n * along with the custom `params` prop that we use for updating the search\n */\ntype Props = Omit<LinkProps, 'to'> & {\n  params: SearchParams,\n};\n\n/**\n * SearchLink updates the given `params` in the search keeping the `pathname`\n * and the other existing search params (see `getSearchWith`)\n */\nexport const SearchLink: React.FC<Props> = ({\n  children, // this is the content between the open and closing tags\n  params, // the params to be updated in the `search`\n  ...props // all usual Link props like `className`, `style` and `id`\n}) => {\n  const [searchParams] = useSearchParams();\n\n  return (\n    <Link\n      // to={{ search: getSearchWith(searchParams, { query: 'sdf' }) }}\n      // to={{ search: getSearchWith(searchParams, { query: null }) }}\n      // to={{ search: getSearchWith(searchParams, { centuries: ['16', '18'] }) }}\n      to={{\n        search: getSearchWith(searchParams, params),\n      }}\n      {...props} // copy all the other props\n    >\n      {children}\n    </Link>\n  );\n};\n","export enum FilterSex {\n  All = 'All',\n  Male = 'm',\n  Female = 'f',\n}\n","import React, { ChangeEvent } from 'react';\nimport cn from 'classnames';\nimport { SearchLink } from './SearchLink';\nimport { getSearchWith } from '../utils/searchHelper';\nimport { FilterSex } from '../types/FilterSex';\n\ntype Props = {\n  searchParams: URLSearchParams,\n  setSearchParams: (value: URLSearchParams | string) => void,\n  query: string,\n};\n\nexport const PeopleFilters: React.FC<Props> = ({\n  searchParams,\n  setSearchParams,\n  query,\n}) => {\n  const centuries = searchParams.getAll('century') || [];\n\n  type FilterSex = keyof typeof FilterSex;\n  const sexOptions: FilterSex[] = Object.keys(FilterSex) as FilterSex[];\n\n  const allCenturies = ['16', '17', '18', '19', '20'];\n\n  const getCenturies = (value: string) => {\n    return centuries.includes(value)\n      ? centuries.filter(century => century !== value)\n      : [...centuries, value];\n  };\n\n  const handleInputChange = (event: ChangeEvent<HTMLInputElement>) => {\n    const newQuery = { query: event.target.value || null };\n    const params = getSearchWith(searchParams, newQuery);\n\n    setSearchParams(params);\n  };\n\n  return (\n    <nav className=\"panel\">\n      <p className=\"panel-heading\">Filters</p>\n\n      <p className=\"panel-tabs\" data-cy=\"SexFilter\">\n        {sexOptions.map(sex => (\n          <SearchLink\n            key={sex}\n            className={cn({\n              'is-active': searchParams.get('sex') === FilterSex[sex]\n                || (searchParams.get('sex') === null && sex === FilterSex.All),\n            })}\n            params={{ sex: sex === FilterSex.All ? null : FilterSex[sex] }}\n          >\n            {sex}\n          </SearchLink>\n        ))}\n      </p>\n\n      <div className=\"panel-block\">\n        <p className=\"control has-icons-left\">\n          <input\n            data-cy=\"NameFilter\"\n            type=\"search\"\n            className=\"input\"\n            placeholder=\"Search\"\n            value={query || ''}\n            onChange={handleInputChange}\n          />\n\n          <span className=\"icon is-left\">\n            <i className=\"fas fa-search\" aria-hidden=\"true\" />\n          </span>\n        </p>\n      </div>\n\n      <div className=\"panel-block\">\n        <div className=\"level is-flex-grow-1 is-mobile\" data-cy=\"CenturyFilter\">\n          <div className=\"level-left\">\n            {allCenturies.map(century => (\n              <SearchLink\n                key={century}\n                data-cy=\"century\"\n                className={cn('button', 'mr-1', {\n                  'is-info': centuries.includes(century),\n                })}\n                params={{ century: getCenturies(century) }}\n              >\n                {century}\n              </SearchLink>\n            ))}\n          </div>\n\n          <div className=\"level-right ml-4\">\n            <SearchLink\n              data-cy=\"centuryALL\"\n              className={cn('button', 'is-success', {\n                'is-outlined': searchParams.getAll('century').length,\n              })}\n              params={{ century: null }}\n            >\n              All\n            </SearchLink>\n          </div>\n        </div>\n      </div>\n\n      <div className=\"panel-block\">\n        <SearchLink\n          className=\"button is-link is-outlined is-fullwidth\"\n          params={{ sex: null, century: null, query: null }}\n        >\n          Reset all filters\n        </SearchLink>\n      </div>\n    </nav>\n  );\n};\n","import './Loader.scss';\r\n\r\nexport const Loader = () => (\r\n  <div className=\"Loader\" data-cy=\"loader\">\r\n    <div className=\"Loader__content\" />\r\n  </div>\r\n);\r\n","import React from 'react';\nimport { NavLink } from 'react-router-dom';\nimport cn from 'classnames';\nimport { Person } from '../../types';\n\ntype Props = {\n  person?: Person | null;\n};\n\nexport const PersonLink: React.FC<Props> = ({ person }) => {\n  return (\n    <NavLink\n      to={`${person?.slug}`}\n      className={cn({\n        'has-text-danger': person?.sex === 'f',\n      })}\n    >\n      {person?.name}\n    </NavLink>\n  );\n};\n","export enum SortField {\n  Name = 'name',\n  Sex = 'sex',\n  Born = 'born',\n  Died = 'died',\n}\n","import { useParams } from 'react-router-dom';\nimport cn from 'classnames';\nimport { Person } from '../types/Person';\nimport { PersonLink } from './PersonLink';\nimport { SortField } from '../types/SortField';\nimport { SearchLink } from './SearchLink';\n\ntype Props = {\n  people: Person[] | [],\n  allPeople: Person[] | [],\n  searchParams: URLSearchParams,\n};\n\nexport const PeopleTable: React.FC<Props> = ({\n  people,\n  allPeople,\n  searchParams,\n}) => {\n  const { slug } = useParams();\n\n  type SortField = keyof typeof SortField;\n  const sortField: SortField[] = Object.keys(SortField) as SortField[];\n\n  const personExist = (parentName: string | null) => {\n    return allPeople.find(p => p.name === parentName);\n  };\n\n  const setSort = (searchParams.get('sort') === null);\n\n  const setOrder = searchParams.get('sort') !== null\n    && searchParams.get('order') === null;\n\n  return (\n    <table\n      data-cy=\"peopleTable\"\n      className=\"table is-striped is-hoverable is-narrow is-fullwidth\"\n    >\n      <thead>\n        <tr>\n          {sortField.map(field => (\n            <th\n              key={field}\n            >\n              <span className=\"is-flex is-flex-wrap-nowrap\">\n                {field}\n                <SearchLink\n                  params={{\n                    sort: (setSort ? SortField[field] : null)\n                    || (setOrder ? SortField[field] : null),\n                    order: setOrder ? 'desc' : null,\n                  }}\n                >\n                  <span className=\"icon\">\n                    <i className={cn('fas', {\n                      'fa-sort-up': searchParams.get('sort')\n                        && SortField[field] === searchParams.get('sort')\n                        && searchParams.get('order') !== 'desc',\n                      'fa-sort-down': searchParams.get('sort')\n                        && SortField[field] === searchParams.get('sort')\n                        && searchParams.get('order') === 'desc',\n                      'fa-sort': SortField[field] !== searchParams.get('sort'),\n                    })}\n                    />\n\n                  </span>\n                </SearchLink>\n              </span>\n            </th>\n          ))}\n          <th>Mother</th>\n          <th>Father</th>\n        </tr>\n      </thead>\n      <tbody>\n        {people.map(person => (\n          <tr\n            data-cy=\"person\"\n            key={person.slug}\n            className={cn({\n              'has-background-warning': person.slug === slug,\n            })}\n          >\n            <td>\n              <PersonLink\n                person={person}\n              />\n            </td>\n\n            <td>\n              {person.sex}\n            </td>\n            <td>\n              {person.born}\n            </td>\n            <td>\n              {person.died}\n            </td>\n            <td>\n\n              {personExist(person.motherName) ? (\n                <PersonLink\n                  person={personExist(person.motherName)}\n                />\n              ) : (\n                <p>{person.motherName || '-'}</p>\n              )}\n            </td>\n            <td>\n              {personExist(person.fatherName) ? (\n                <PersonLink\n                  person={personExist(person.fatherName)}\n                />\n              ) : (\n                <p>{person.fatherName || '-'}</p>\n              )}\n            </td>\n          </tr>\n        ))}\n      </tbody>\n    </table>\n  );\n};\n","import { Person } from './types/Person';\n\n// eslint-disable-next-line max-len\nconst API_URL = 'https://mate-academy.github.io/react_people-table/api/people.json';\n\nfunction wait(delay: number) {\n  return new Promise(resolve => setTimeout(resolve, delay));\n}\n\nexport async function getPeople(): Promise<Person[]> {\n  // keep this delay for testing purpose\n  return wait(500)\n    .then(() => fetch(API_URL))\n    .then(response => response.json());\n}\n","import React, { useEffect, useState } from 'react';\nimport { useSearchParams } from 'react-router-dom';\nimport { PeopleFilters } from './PeopleFilters';\nimport { Loader } from './Loader';\nimport { PeopleTable } from './PeopleTable';\nimport { Person } from '../types/Person';\nimport { getPeople } from '../api';\nimport { SortField } from '../types/SortField';\n\nexport const PeoplePage = () => {\n  const [peopleFromServer, setPeopleFromServer] = useState<Person[]>([]);\n  const [isLoading, setIsLoading] = useState(true);\n  const [error, setError] = useState('');\n  const [searchParams, setSearchParams] = useSearchParams();\n  const query = searchParams.get('query') || '';\n  const sex = searchParams.get('sex') || '';\n  const centuries = searchParams.getAll('century');\n\n  const loadData = async () => {\n    try {\n      const people = await getPeople();\n\n      if (people.length === 0) {\n        setError('There are no people on the server');\n\n        return;\n      }\n\n      setPeopleFromServer(people);\n    } catch {\n      setError('Something went wrong');\n    } finally {\n      setIsLoading(false);\n    }\n  };\n\n  useEffect(() => {\n    loadData();\n  }, []);\n\n  const filteredPeople = React.useMemo(() => {\n    const preparedQuery = query.toLowerCase().trim();\n\n    const visiblepeople = [...peopleFromServer]\n      .filter(person => {\n        switch (sex) {\n          case 'm':\n            return person.sex === 'm';\n          case 'f':\n            return person.sex === 'f';\n          default:\n            return true;\n        }\n      })\n      .filter(person => {\n        if (centuries.length > 0) {\n          const birthCentury = Math.ceil(person.born / 100);\n\n          return centuries.includes(birthCentury.toString());\n        }\n\n        return true;\n      })\n      .filter(person => person.name.toLowerCase().includes(preparedQuery)\n      || person.motherName?.toLowerCase().includes(preparedQuery)\n        || person.fatherName?.toLowerCase().includes(preparedQuery))\n      .sort((a, b) => {\n        switch (searchParams.get('sort')) {\n          case SortField.Name:\n            return a[SortField.Name].localeCompare(b[SortField.Name]);\n          case SortField.Sex:\n            return a[SortField.Sex].localeCompare(b[SortField.Sex]);\n          case SortField.Born:\n            return a[SortField.Born] - b[SortField.Born];\n          case SortField.Died:\n            return a[SortField.Died] - b[SortField.Died];\n          default:\n            return 0;\n        }\n      });\n\n    return !searchParams.get('order') ? visiblepeople : visiblepeople.reverse();\n  }, [searchParams, peopleFromServer, centuries]);\n\n  return (\n    <>\n      <h1 className=\"title\">People Page</h1>\n\n      <div className=\"block\">\n        <div className=\"columns is-desktop is-flex-direction-row-reverse\">\n          <div className=\"column is-7-tablet is-narrow-desktop\">\n            {!isLoading && (\n              <PeopleFilters\n                searchParams={searchParams}\n                setSearchParams={setSearchParams}\n                query={query}\n              />\n            )}\n\n          </div>\n\n          <div className=\"column\">\n            <div className=\"box table-container\">\n              {isLoading && <Loader />}\n\n              {error && (\n                <p data-cy=\"peopleLoadingError\" className=\"has-text-danger\">\n                  {error}\n                </p>\n              )}\n\n              {error && peopleFromServer.length === 0 && (\n                <p data-cy=\"noPeopleMessage\">\n                  {error}\n                </p>\n              )}\n              {filteredPeople.length === 0 && !isLoading\n                && (\n                // eslint-disable-next-line\n                  <p>There are no people matching the current search criteria</p>\n                )}\n\n              {!error\n                && !isLoading\n                && filteredPeople.length !== 0\n                && (\n                  <PeopleTable\n                    people={filteredPeople}\n                    allPeople={peopleFromServer}\n                    searchParams={searchParams}\n                  />\n                )}\n            </div>\n          </div>\n        </div>\n      </div>\n    </>\n  );\n};\n","export const HomePage = () => (\n  <h1 className=\"title\">Home Page</h1>\n);\n","export const NotFoundPage = () => (\n  <h1 className=\"title\">Page not found</h1>\n);\n","import { createRoot } from 'react-dom/client';\nimport {\n  HashRouter as Router,\n  Routes,\n  Route,\n  Navigate,\n} from 'react-router-dom';\n\nimport 'bulma/css/bulma.css';\nimport '@fortawesome/fontawesome-free/css/all.css';\n\nimport { App } from './App';\nimport { PeoplePage } from './components/PeoplePage';\nimport { HomePage } from './components/HomePage';\nimport { NotFoundPage } from './components/NotFoundPage';\n\ncreateRoot(document.getElementById('root') as HTMLDivElement)\n  .render(\n    <Router>\n      <Routes>\n        <Route path=\"/\" element={<App />}>\n          <Route index element={<HomePage />} />\n          <Route path=\"people\" element={<PeoplePage />}>\n            <Route index element={<PeoplePage />} />\n            <Route path=\":slug\" element={<PeoplePage />} />\n          </Route>\n          <Route path=\"*\" element={<NotFoundPage />} />\n          <Route path=\"home\" element={<Navigate to=\"/\" replace />} />\n        </Route>\n      </Routes>\n    </Router>,\n  );\n"],"sourceRoot":""}